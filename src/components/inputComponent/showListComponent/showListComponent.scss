@import "../../../tools.scss";


.list__todo {
  width: $sizePercent/2.5;
  @include setMargin(0 auto);
  @include setPadding(50px);
  @include borderR(0 0 50px 50px);

  @include setFlex(flex, column, center, center);

  background-color: $primaryColor;

  .wrapper__item {
    width: $sizePercent;
    @include setFlex(flex, row, flex-start, center);
    @include setMargin(0 0 30px);
    @include borderR(30px 0 0 30px);
    cursor: pointer;

    // background-color: $totalColor;

    .item__check {
      width: 10%;
      height: $size - 15 + px;
      @include borderR(30px 0 0 30px);

      @include setFlex(flex, row, center, center);
      background-color: $secondaryColor;

      input[type="radio"] {
        @include position(relative);
      }
      input[type="radio"]::before {
        content: "";
        display: inline-block;
        width: 16px;
        height: 16px;
        @include borderR($sizePercent/2);
        background-color: $totalColor;
        // @include bor(2px solid #000);
        @include position(absolute);
        top: $sizePercent/2;
        left: $sizePercent/2;
        transform: translate(-50%, -50%);
      }
      input[type="radio"]:checked::before {
        background-color: rgb(255, 127, 249);
      }
    }
    .item__task {
      width: 50%;
      height: $size - 15 + px;
      @include bor(0);
      @include setPadding(20px 20px);
      @include position(relative);

      @include setFlex(flex, row, space-between, center);
      background-color: $totalColor;

      .item__taskname {
        font-size: $textFontSize;
        white-space: pre-wrap;
      }
      .item__status {
        font-size: $textFontSize/1.3;
        white-space: pre-wrap;
        @include position(absolute);
        top: -22px;
        right: 0;
        color: $primaryColor;
        width: 100px;
        height: 22px;
        background-color: $totalColor;
        @include setFlex(flex, row, center, center);
        @include borderR(5px 5px 0 0);

        &.selected {
          background-color: $secondaryColor;
          color: $totalColor;
        }
      }

      &.selected {
        background-color: $secondaryColor;
        color: $totalColor;
      }
    }
    .item__buttons {
      width: 40%;
      height: $size - 15 + px;
      @include bor(0);
      //   @include borderR(0 30px 30px 0);

      @include setFlex(flex, row, space-between, center);
      //   background-color: $totalColor;

      .item__btn {
        flex: 1;
        height: $sizePercent;
        font-size: $textFontSize * 1.5;
        border: 0;
        outline: none;
        color: $totalColor;
        cursor: pointer;
        background-color: $totalColor;
      }
      .delete {
        background-color: $secondaryColor3;
        color: $totalColor;

        &:hover {
          background-color: rgb(255, 0, 0);
        }
      }
      .transfer {
        background-color: $secondaryColor2;
        color: $totalColor;

        &:hover {
          background-color: rgb(240, 216, 0);
        }
      }
      .complete {
        background-color: $secondaryColor;
        color: $totalColor;
        @include borderR(0 30px 30px 0);

        &:hover {
          background-color: rgb(0, 209, 0);
        }
      }
    }
  }
}
